{"failedCount":1,"prefixedPath":"src\/test\/java\/acceptance\/test\/prueba-tecnica.feature","packageQualifiedName":"src.test.java.acceptance.test.prueba-tecnica","loopIndex":-1,"relativePath":"src\/test\/java\/acceptance\/test\/prueba-tecnica.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":52238700,"millis":52.2387,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"configure retry = {count: 3, interval: 3000}"}},{"result":{"nanos":82186200,"errorMessage":"js failed:\n>>>>\n01: read('karate-config.js')\n<<<<\norg.graalvm.polyglot.PolyglotException: java.io.FileNotFoundException: C:\\Users\\OSVALDO\\Documents\\Cobre\\PruebaTecnica\\src\\test\\java\\acceptance\\test\\karate-config.js (El sistema no puede encontrar el archivo especificado)\n- com.intuit.karate.resource.FileResource.getStream(FileResource.java:98)\n- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:99)\n- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:95)\n- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:58)\n- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:120)\n- <js>.:program(Unnamed:1)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5","millis":82.1862,"status":"failed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"configure karate = read('karate-config.js')"},"stepLog":"16:08:45.659 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\n* configure karate = read('karate-config.js')\njs failed:\n>>>>\n01: read('karate-config.js')\n<<<<\norg.graalvm.polyglot.PolyglotException: java.io.FileNotFoundException: C:\\Users\\OSVALDO\\Documents\\Cobre\\PruebaTecnica\\src\\test\\java\\acceptance\\test\\karate-config.js (El sistema no puede encontrar el archivo especificado)\n- com.intuit.karate.resource.FileResource.getStream(FileResource.java:98)\n- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:99)\n- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:95)\n- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:58)\n- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:120)\n- <js>.:program(Unnamed:1)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# La clase S3Util se encuentra en un gestor de librerías externo al proyecto","# Imaginemos que esta clase contiene la configuración y conexión de un cliente AWS, además los métodos para subir archivos a buckets S3","# También contiene un método para verificar si un archivo se encuentra dentro de un folder"],"background":true,"line":9,"prefix":"*","index":2,"text":"def S3Manager = Java.type('co.cobre.lib.qa.aws.S3Util')"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":10,"prefix":"*","index":3,"text":"def S3ManagerInstance = new S3Manager()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":11,"prefix":"*","index":4,"text":"def SQSManager = karate.callSingle('..\/acceptance\/test\/instances-sqs.js')"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":12,"prefix":"*","index":5,"text":"def waitTime = function(seconds) { java.lang.Thread.sleep(seconds * 1000) }"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# La clase FileUtils se encuentra en un gestor de librerías externo al proyecto","# Imaginemos que esta clase contiene métodos para tomar un archivo, renombrarlo y copiarlo en otra ruta"],"background":true,"line":15,"prefix":"*","index":6,"text":"def FileUtils = Java.type('co.cobre.lib.qa.util.FileUtils')"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":16,"prefix":"*","index":7,"text":"def CommonUtils = Java.type('co.cobre.lib.qa.util.CommonUtils')"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":17,"prefix":"*","index":8,"text":"def funtion = read('funtion.js')"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# --------------------------------------------------------------- #"],"line":22,"prefix":"*","index":0,"text":"def noveltyUuid = co.cobre.lib.qa.util.CommonUtils.generateUUID()"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":23,"prefix":"*","index":1,"text":"print \"El uuid de la novedad es: \" + noveltyUuid"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":24,"prefix":"*","index":2,"text":"def fullFileName = noveltyUuid+karate.fileExtension"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# --------------------------------------------------------------- #","#    * def renameFile = FileUtils.renameFile(currentFilePath, currentFileName, newPathNewFile, noveltyUuid, karate.fileExtension)","#    * match renameFile == true","# --------------------------------------------------------------- #"],"line":31,"prefix":"*","index":3,"text":"print \"El bucket es: \" + karate.bucketName"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":32,"prefix":"*","index":4,"text":"print \"El folder  es: \" + karate.folderRecaudoFiles"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["#    * S3ManagerInstance.uploadFileToBucket(karate.bucketName, karate.folderRecaudoFiles, fullFileName, newPathNewFile)","#    * waitTime(3)","# --------------------------------------------------------------- #","#    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderRecaudoFiles, fullFileName)","#    * print \"La existencia del archivo es: \" + fileExist","#    * match fileExist == true","# --------------------------------------------------------------- #","#    * def variableMapToReplaceInQueueMessageBody = funtion.generateQueueMessageBody(fullFileName, <clientCode>, karate.bucketName)","#    * SQSManager.sendMessageToQueue('<jsonFileSqsEvents>', 'testing-recaudo-qa.fifo', variableMapToReplaceInQueueMessageBody, '<pathJsonFileSqsEvents>')","#    * waitTime(8)","# --------------------------------------------------------------- #","# Uso de API REST para obtener información de las novedades"],"line":48,"prefix":"Given","index":5,"text":"url config.baseUrl + noveltyUuid"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":49,"prefix":"*","index":6,"text":"print \"la url es : \" + url"}}],"line":81,"description":"","durationMillis":134.4249,"failed":true,"error":"js failed:\n>>>>\n01: read('karate-config.js')\n<<<<\norg.graalvm.polyglot.PolyglotException: java.io.FileNotFoundException: C:\\Users\\OSVALDO\\Documents\\Cobre\\PruebaTecnica\\src\\test\\java\\acceptance\\test\\karate-config.js (El sistema no puede encontrar el archivo especificado)\n- com.intuit.karate.resource.FileResource.getStream(FileResource.java:98)\n- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:99)\n- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:95)\n- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:58)\n- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:120)\n- <js>.:program(Unnamed:1)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5","tags":["regression"],"executorName":"main","name":"Dado que se carga un archivo de recaudo con datos correctamente con usuarios que recibirán un link de pago, al procesarse el archivo se persisten en BD los recaudo creados exitosamente","startTime":1710968925376,"refId":"[1.1:81]","endTime":1710968925659,"exampleData":{"clientCode":"TEST01","pathJsonFileSqsEvents":"src\/test\/java\/acceptance\/test\/","jsonFileSqsEvents":"queueEvent.json","currentFilePath":"src\/test\/java\/acceptance\/test\/","currentFileName":"recaudoTemplateDatosCorrectos.csv","newPathNewFile":"src\/test\/resources\/testFilesToUse\/","pathJsonDataWithExpectedInformation":"src\/test\/java\/acceptance\/test\/","jsonDataWithExpectedInformation":"respuestaEsperadaDatosCorrectos.json","noveltyStatus":"VALIDATED","registerTotal":"3","validationErrorNumber":"'0'","createdNumber":"'3'","page":"1","size":"3"},"exampleIndex":0}],"callDepth":0,"name":"sample karate test script","description":"","resultDate":"2024-03-20 04:08:45 PM","durationMillis":134.4249,"passedCount":0}