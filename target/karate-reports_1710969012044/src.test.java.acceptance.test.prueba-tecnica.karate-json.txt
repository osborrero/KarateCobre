{"failedCount":1,"prefixedPath":"src\/test\/java\/acceptance\/test\/prueba-tecnica.feature","packageQualifiedName":"src.test.java.acceptance.test.prueba-tecnica","loopIndex":-1,"relativePath":"src\/test\/java\/acceptance\/test\/prueba-tecnica.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4","millis":0.0,"status":"failed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"configure retry = {count: 3, interval: 3000}"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\n* configure retry = {count: 3, interval: 3000}\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5","millis":0.0,"status":"failed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"configure karate = read('karate-config.js')"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\n* configure karate = read('karate-config.js')\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9","millis":0.0,"status":"failed"},"step":{"comments":["# La clase S3Util se encuentra en un gestor de librer铆as externo al proyecto","# Imaginemos que esta clase contiene la configuraci贸n y conexi贸n de un cliente AWS, adem谩s los m茅todos para subir archivos a buckets S3","# Tambi茅n contiene un m茅todo para verificar si un archivo se encuentra dentro de un folder"],"background":true,"line":9,"prefix":"*","index":2,"text":"def S3Manager = Java.type('co.cobre.lib.qa.aws.S3Util')"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\n* def S3Manager = Java.type('co.cobre.lib.qa.aws.S3Util')\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10","millis":0.0,"status":"failed"},"step":{"background":true,"line":10,"prefix":"*","index":3,"text":"def S3ManagerInstance = new S3Manager()"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\n* def S3ManagerInstance = new S3Manager()\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11","millis":0.0,"status":"failed"},"step":{"background":true,"line":11,"prefix":"*","index":4,"text":"def SQSManager = karate.callSingle('..\/acceptance\/test\/instances-sqs.js')"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\n* def SQSManager = karate.callSingle('..\/acceptance\/test\/instances-sqs.js')\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12","millis":0.0,"status":"failed"},"step":{"background":true,"line":12,"prefix":"*","index":5,"text":"def waitTime = function(seconds) { java.lang.Thread.sleep(seconds * 1000) }"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\n* def waitTime = function(seconds) { java.lang.Thread.sleep(seconds * 1000) }\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15","millis":0.0,"status":"failed"},"step":{"comments":["# La clase FileUtils se encuentra en un gestor de librer铆as externo al proyecto","# Imaginemos que esta clase contiene m茅todos para tomar un archivo, renombrarlo y copiarlo en otra ruta"],"background":true,"line":15,"prefix":"*","index":6,"text":"def FileUtils = Java.type('co.cobre.lib.qa.util.FileUtils')"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\n* def FileUtils = Java.type('co.cobre.lib.qa.util.FileUtils')\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16","millis":0.0,"status":"failed"},"step":{"background":true,"line":16,"prefix":"*","index":7,"text":"def CommonUtils = Java.type('co.cobre.lib.qa.util.CommonUtils')"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\n* def CommonUtils = Java.type('co.cobre.lib.qa.util.CommonUtils')\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17","millis":0.0,"status":"failed"},"step":{"background":true,"line":17,"prefix":"*","index":8,"text":"def funtion = read('funtion.js')"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\n* def funtion = read('funtion.js')\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22","millis":0.0,"status":"failed"},"step":{"comments":["# --------------------------------------------------------------- #"],"line":22,"prefix":"*","index":0,"text":"def noveltyUuid = co.cobre.lib.qa.util.CommonUtils.generateUUID()"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\n* def noveltyUuid = co.cobre.lib.qa.util.CommonUtils.generateUUID()\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23","millis":0.0,"status":"failed"},"step":{"line":23,"prefix":"*","index":1,"text":"print \"El uuid de la novedad es: \" + noveltyUuid"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\n* print \"El uuid de la novedad es: \" + noveltyUuid\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:24","millis":0.0,"status":"failed"},"step":{"line":24,"prefix":"*","index":2,"text":"def fullFileName = noveltyUuid+karate.fileExtension"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:24\n* def fullFileName = noveltyUuid+karate.fileExtension\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:24\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:24\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:31","millis":0.0,"status":"failed"},"step":{"comments":["# --------------------------------------------------------------- #","#    * def renameFile = FileUtils.renameFile(currentFilePath, currentFileName, newPathNewFile, noveltyUuid, karate.fileExtension)","#    * match renameFile == true","# --------------------------------------------------------------- #"],"line":31,"prefix":"*","index":3,"text":"print \"El bucket es: \" + karate.bucketName"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:31\n* print \"El bucket es: \" + karate.bucketName\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:24\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:31\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:24\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:31\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:32","millis":0.0,"status":"failed"},"step":{"line":32,"prefix":"*","index":4,"text":"print \"El folder  es: \" + karate.folderRecaudoFiles"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:32\n* print \"El folder  es: \" + karate.folderRecaudoFiles\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:24\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:31\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:32\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:24\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:31\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:32\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:48","millis":0.0,"status":"failed"},"step":{"comments":["#    * S3ManagerInstance.uploadFileToBucket(karate.bucketName, karate.folderRecaudoFiles, fullFileName, newPathNewFile)","#    * waitTime(3)","# --------------------------------------------------------------- #","#    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderRecaudoFiles, fullFileName)","#    * print \"La existencia del archivo es: \" + fileExist","#    * match fileExist == true","# --------------------------------------------------------------- #","#    * def variableMapToReplaceInQueueMessageBody = funtion.generateQueueMessageBody(fullFileName, <clientCode>, karate.bucketName)","#    * SQSManager.sendMessageToQueue('<jsonFileSqsEvents>', 'testing-recaudo-qa.fifo', variableMapToReplaceInQueueMessageBody, '<pathJsonFileSqsEvents>')","#    * waitTime(8)","# --------------------------------------------------------------- #","# Uso de API REST para obtener informaci贸n de las novedades"],"line":48,"prefix":"Given","index":5,"text":"url config.baseUrl + noveltyUuid"},"stepLog":"16:09:39.766 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:48\nGiven url config.baseUrl + noveltyUuid\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:24\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:31\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:32\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:48\n"},{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:24\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:31\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:32\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:48\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:49","millis":0.0,"status":"failed"},"step":{"line":49,"prefix":"*","index":6,"text":"print \"la url es : \" + url"},"stepLog":"16:09:39.782 src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:49\n* print \"la url es : \" + url\n>> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:24\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:31\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:32\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:48\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:49\n"}],"line":81,"description":"","durationMillis":0.0,"failed":true,"error":">> src\/test\/java\/acceptance\/test\/prueba-tecnica.feature:81\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\njs failed:\n>>>>\n01: \/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (\/\/function fn() {\n02: \/\/  karate.log(\"Cargando configuraciones\");\n03: \/\/  return config;\n04: \/\/}\n05: \n06: function uploadFileAndVerifyExistence(bucketName, folderName, fileName, localFilePath) {\n07:     * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\n08:     * waitTime(3)\n09:     * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\n10:     * print \"La existencia del archivo es: \" + fileExist\n11:     * match fileExist == true\n12: }\n13: \n14: function fn() {\n15:   var config = {\n16:     bucketName: 'test-automation-qa',\n17:     folderRecaudoFiles: 'files-to-cash-in',\n18:     fileExtension: '.csv',\n19:     baseUrl: 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'\n20: \n21: \n22:   };\n23: \n24:   \/\/ Configuraci贸n para cargar clases Java\n25:   config.configureJavaPackageScan = true;\n26:   config.javaPackages = [\n27:     \"co.cobre.lib.qa.util\" \/\/ Paquete donde se encuentra la clase CommonUtils\n28:   ];\n29: \n30:   return config;\n31: }\n32: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:7:4 Expected an operand but found *\r\n    * S3ManagerInstance.uploadFileToBucket(bucketName, folderName, fileName, localFilePath)\r\n    ^\nUnnamed:8:4 Expected an operand but found *\r\n    * waitTime(3)\r\n    ^\nUnnamed:9:4 Expected an operand but found *\r\n    * def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderName, fileName)\r\n    ^\nUnnamed:10:4 Expected an operand but found *\r\n    * print \"La existencia del archivo es: \" + fileExist\r\n    ^\nUnnamed:11:4 Expected an operand but found *\r\n    * match fileExist == true\r\n    ^\nUnnamed:14:0 Expected ) but found function\r\nfunction fn() {\r\n^\nUnnamed:30:2 Invalid return statement\r\n  return config;\r\n  ^\nUnnamed:31:0 Expected eof but found }\r\n}\r\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:296)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:372)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:391)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:199)\n- java.util.Iterator.forEachRemaining(Iterator.java:116)\n\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:4\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:5\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:9\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:10\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:11\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:12\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:15\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:16\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:17\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:22\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:23\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:24\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:31\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:32\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:48\nsrc\/test\/java\/acceptance\/test\/prueba-tecnica.feature:49","tags":["regression"],"executorName":"main","name":"Dado que se carga un archivo de recaudo con datos correctamente con usuarios que recibir谩n un link de pago, al procesarse el archivo se persisten en BD los recaudo creados exitosamente","startTime":1710968979688,"refId":"[1.1:81]","endTime":1710968979782,"exampleData":{"clientCode":"TEST01","pathJsonFileSqsEvents":"src\/test\/java\/acceptance\/test\/","jsonFileSqsEvents":"queueEvent.json","currentFilePath":"src\/test\/java\/acceptance\/test\/","currentFileName":"recaudoTemplateDatosCorrectos.csv","newPathNewFile":"src\/test\/resources\/testFilesToUse\/","pathJsonDataWithExpectedInformation":"src\/test\/java\/acceptance\/test\/","jsonDataWithExpectedInformation":"respuestaEsperadaDatosCorrectos.json","noveltyStatus":"VALIDATED","registerTotal":"3","validationErrorNumber":"'0'","createdNumber":"'3'","page":"1","size":"3"},"exampleIndex":0}],"callDepth":0,"name":"sample karate test script","description":"","resultDate":"2024-03-20 04:09:39 PM","durationMillis":0.0,"passedCount":0}