[{"line":1,"elements":[{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"configure retry = {count: 3, interval: 3000}","result":{"duration":96524900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"result":{"duration":29995200,"error_message":"js failed:\n>>>>\n01: Java.type('co.cobre.lib.qa.aws.S3Util')\n<<<<\norg.graalvm.polyglot.PolyglotException: TypeError: Access to host class co.cobre.lib.qa.aws.S3Util is not allowed or does not exist.\n- <js>.:program(Unnamed:1)\n\nclasspath:acceptance\/test\/prueba-tecnica.feature:8","status":"failed"},"comments":["# La clase S3Util se encuentra en un gestor de librerías externo al proyecto","# Imaginemos que esta clase contiene la configuración y conexión de un cliente AWS, además los métodos para subir archivos a buckets S3","# También contiene un método para verificar si un archivo se encuentra dentro de un folder"],"line":8,"name":"def S3Manager = Java.type('co.cobre.lib.qa.aws.S3Util')","match":{"location":"karate","arguments":[]},"keyword":"*","doc_string":{"content_type":"","value":"12:06:40.154 classpath:acceptance\/test\/prueba-tecnica.feature:8\n* def S3Manager = Java.type('co.cobre.lib.qa.aws.S3Util')\njs failed:\n>>>>\n01: Java.type('co.cobre.lib.qa.aws.S3Util')\n<<<<\norg.graalvm.polyglot.PolyglotException: TypeError: Access to host class co.cobre.lib.qa.aws.S3Util is not allowed or does not exist.\n- <js>.:program(Unnamed:1)\n\nclasspath:acceptance\/test\/prueba-tecnica.feature:8\n","line":8}},{"name":"def S3ManagerInstance = new S3Manager()","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def SQSManager = karate.callSingle('..\/acceptance\/test\/instances-sqs.js')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def waitTime = function(seconds) { java.lang.Thread.sleep(seconds * 1000) }","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def FileUtils = Java.type('co.cobre.lib.qa.util.FileUtils')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# La clase FileUtils se encuentra en un gestor de librerías externo al proyecto","# Imaginemos que esta clase contiene métodos para tomar un archivo, renombrarlo y copiarlo en otra ruta"],"keyword":"*","line":14},{"name":"def CommonUtils = Java.type('co.cobre.lib.qa.util.CommonUtils')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15},{"name":"def CommonFuntion = Java.type('co.cobre.lib.qa.util.CommonFuntion')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":16}]},{"start_timestamp":"2024-03-21T17:06:39.888Z","line":84,"name":"Dado que se carga un archivo de recaudo con datos correctamente con usuarios que recibirán un link de pago, al procesarse el archivo se persisten en BD los recaudo creados exitosamente","description":"","id":"dado-que-se-carga-un-archivo-de-recaudo-con-datos-correctamente-con-usuarios-que-recibirán-un-link-de-pago,-al-procesarse-el-archivo-se-persisten-en-bd-los-recaudo-creados-exitosamente","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def renameFile = FileUtils.renameFile('src\/test\/java\/acceptance\/test\/', 'recaudoTemplateDatosCorrectos.csv', 'src\/test\/resources\/testFilesToUse\/', noveltyUuid, fileExtension)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# --------------------------------------------------------------- #"],"keyword":"*","line":22},{"name":"match renameFile == true","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":23},{"name":"print \"El bucket es: \" + bucketName","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# --------------------------------------------------------------- #"],"keyword":"*","line":26},{"name":"print \"El folder  es: \" + folderRecaudoFiles","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":27},{"name":"S3ManagerInstance.uploadFileToBucket(karate.bucketName, fn.folderRecaudoFiles, fullFileName, newPathNewFile)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":28},{"name":"waitTime(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":29},{"name":"def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderRecaudoFiles, fullFileName)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["#--------------------------------------------------------------- #"],"keyword":"*","line":32},{"name":"print \"La existencia del archivo es: \" + fileExist","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":33},{"name":"match fileExist == true","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":34},{"result":{"duration":0,"status":"skipped"},"comments":["# --------------------------------------------------------------- #"],"line":38,"name":"def variableMapToReplaceInQueueMessageBody =","match":{"location":"karate","arguments":[]},"keyword":"*","doc_string":{"content_type":"","value":"{\n\"fileName\": '#(fullFileName)',\n\"workplacebankCode\": 'TEST01',\n\"bucketName\": '#(bucketName)'\n#    }\n#","line":38}},{"name":"SQSManager.sendMessageToQueue('queueEvent.json', 'testing-recaudo-qa.fifo', variableMapToReplaceInQueueMessageBody, 'src\/test\/java\/acceptance\/test\/')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":46},{"name":"waitTime(8)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":47},{"name":"url baseUrl + noveltyUuid","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# --------------------------------------------------------------- #","# Uso de API REST para obtener información de las novedades"],"keyword":"Given","line":51},{"name":"header X-WorkplaceBankCode = 'TEST01'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":52},{"name":"retry until responseStatus == 200 && response.cashInNovelty.status == status && response.cashInNoveltyDetailsCounters.total == total","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":53},{"name":"method get","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":54},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":55},{"name":"def totalAmount = response.cashInNovelty.totalAmount","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":56},{"name":"def status = response.cashInNovelty.status","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":57},{"name":"def totalNovelties = response.cashInNoveltyDetailsCounters.total","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":58},{"name":"def validationError = response.cashInNoveltyDetailsCounters.validationError","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":59},{"name":"def created = response.cashInNoveltyDetailsCounters.created#","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":60},{"name":"match totalAmount == '<>'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":61},{"name":"match getNovelty.status == 'VALIDATED'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":62},{"name":"match getNovelty.totalNovelties == '3'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":63},{"name":"match getNovelty.validationError == '0'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":64},{"name":"match getNovelty.created == '3'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":65},{"name":"waitTime(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":66},{"name":"def dataWithExpectedInformation = karate.read(\"classpath:acceptance\/test\/\" + 'respuestaEsperadaDatosCorrectos.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# --------------------------------------------------------------- #","# Uso de API REST para obtener información de las novelty-details"],"keyword":"*","line":70},{"name":"def pageInt = parseInt('1')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":71},{"name":"def sizeInt = parseInt('3')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":72},{"name":"url baseUrl + noveltyUuid + '\/' + 'novelty-details'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":73},{"name":"header X-WorkplaceBankCode = 'TEST01'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":74},{"name":"params {page: '0', size: '100'}","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":75},{"name":"retry until responseStatus == 200 && response.content != []","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":76},{"name":"method get","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":77},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":78},{"name":"def content = response.content","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":79},{"name":"match getNoveltyDetails.content contains deep dataWithExpectedInformation","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":80}],"tags":[{"name":"@regression","line":19}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"configure retry = {count: 3, interval: 3000}","result":{"duration":586200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"result":{"duration":4862200,"error_message":"js failed:\n>>>>\n01: Java.type('co.cobre.lib.qa.aws.S3Util')\n<<<<\norg.graalvm.polyglot.PolyglotException: TypeError: Access to host class co.cobre.lib.qa.aws.S3Util is not allowed or does not exist.\n- <js>.:program(Unnamed:1)\n\nclasspath:acceptance\/test\/prueba-tecnica.feature:8","status":"failed"},"comments":["# La clase S3Util se encuentra en un gestor de librerías externo al proyecto","# Imaginemos que esta clase contiene la configuración y conexión de un cliente AWS, además los métodos para subir archivos a buckets S3","# También contiene un método para verificar si un archivo se encuentra dentro de un folder"],"line":8,"name":"def S3Manager = Java.type('co.cobre.lib.qa.aws.S3Util')","match":{"location":"karate","arguments":[]},"keyword":"*","doc_string":{"content_type":"","value":"12:06:40.170 classpath:acceptance\/test\/prueba-tecnica.feature:8\n* def S3Manager = Java.type('co.cobre.lib.qa.aws.S3Util')\njs failed:\n>>>>\n01: Java.type('co.cobre.lib.qa.aws.S3Util')\n<<<<\norg.graalvm.polyglot.PolyglotException: TypeError: Access to host class co.cobre.lib.qa.aws.S3Util is not allowed or does not exist.\n- <js>.:program(Unnamed:1)\n\nclasspath:acceptance\/test\/prueba-tecnica.feature:8\n","line":8}},{"name":"def S3ManagerInstance = new S3Manager()","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def SQSManager = karate.callSingle('..\/acceptance\/test\/instances-sqs.js')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def waitTime = function(seconds) { java.lang.Thread.sleep(seconds * 1000) }","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def FileUtils = Java.type('co.cobre.lib.qa.util.FileUtils')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# La clase FileUtils se encuentra en un gestor de librerías externo al proyecto","# Imaginemos que esta clase contiene métodos para tomar un archivo, renombrarlo y copiarlo en otra ruta"],"keyword":"*","line":14},{"name":"def CommonUtils = Java.type('co.cobre.lib.qa.util.CommonUtils')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15},{"name":"def CommonFuntion = Java.type('co.cobre.lib.qa.util.CommonFuntion')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":16}]},{"start_timestamp":"2024-03-21T17:06:40.162Z","line":162,"name":"Dado que se carga un archivo de recaudo con datos que contienen caracteres especiales, al procesarse el archivo se verificará la información y se persistirán en BD con el detalle del error","description":"","id":"dado-que-se-carga-un-archivo-de-recaudo-con-datos-que-contienen-caracteres-especiales,-al-procesarse-el-archivo-se-verificará-la-información-y-se-persistirán-en-bd-con-el-detalle-del-error","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def bucketName = 'test-automation-qa'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# --------------------------------------------------------------- #"],"keyword":"*","line":89},{"name":"def folderRecaudoFiles = 'files-to-cash-in'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":90},{"name":"def noveltyUuid = java.util.UUID.randomUUID().toString()","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":91},{"name":"print \"El uuid de la novedad es: \" + noveltyUuid","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":92},{"name":"def fileExtension = \".csv\"","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":94},{"name":"def fullFileName = noveltyUuid+fileExtension","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":96},{"name":"def renameFile = FileUtils.renameFile('src\/test\/java\/acceptance\/test\/', 'recaudoTemplateCaracteresEspeciales.csv', 'src\/test\/resources\/testFilesToUse\/', noveltyUuid, fileExtension)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# --------------------------------------------------------------- #"],"keyword":"*","line":99},{"name":"waitTime(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"print \"El resultado de renombrar el archivo es: \" + renameFile","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match renameFile == true","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":102},{"name":"print \"El bucket es: \" + bucketName","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# --------------------------------------------------------------- #"],"keyword":"*","line":105},{"name":"print \"El folder  es: \" + folderConvertedFiles","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":106},{"name":"S3ManagerInstance.uploadFileToBucket(bucketName, folderRecaudoFiles, fullFileName, newPathNewFile)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"waitTime(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderRecaudoFiles, fullFileName)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# --------------------------------------------------------------- #"],"keyword":"*","line":111},{"name":"print \"La existencia del archivo es: \" + fileExist","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":112},{"name":"match fileExist == true","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":113},{"result":{"duration":0,"status":"skipped"},"comments":["# --------------------------------------------------------------- #"],"line":116,"name":"def variableMapToReplaceInQueueMessageBody =","match":{"location":"karate","arguments":[]},"keyword":"*","doc_string":{"content_type":"","value":"{\n\"fileName\": '#(fullFileName)',\n\"workplacebankCode\": 'TEST01',\n\"bucketName\": '#(bucketName)'\n}","line":116}},{"name":"SQSManager.sendMessageToQueue('queueEvent.json', 'testing-recaudo-qa.fifo', variableMapToReplaceInQueueMessageBody, 'src\/test\/java\/acceptance\/test\/')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"waitTime(8)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"url 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'+noveltyUuid+''","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# --------------------------------------------------------------- #","# Uso de API REST para obtener información de las novedades"],"keyword":"Given","line":129},{"name":"header X-WorkplaceBankCode = 'TEST01'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":130},{"name":"retry until responseStatus == 200 && response.cashInNovelty.status == status && response.cashInNoveltyDetailsCounters.total == total","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":131},{"name":"method get","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":132},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":133},{"name":"def totalAmount = response.cashInNovelty.totalAmount","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":134},{"name":"def status = response.cashInNovelty.status","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":135},{"name":"def totalNovelties = response.cashInNoveltyDetailsCounters.total","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":136},{"name":"def validationError = response.cashInNoveltyDetailsCounters.validationError","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":137},{"name":"def created = response.cashInNoveltyDetailsCounters.created#","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":138},{"name":"match totalAmount == '<>'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":139},{"name":"match getNovelty.status == 'VALIDATED'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":140},{"name":"match getNovelty.totalNovelties == '2'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":141},{"name":"match getNovelty.validationError == '2'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":142},{"name":"match getNovelty.created == '0'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":143},{"name":"waitTime(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":144},{"name":"def dataWithExpectedInformation = karate.read(\"classpath:acceptance\/test\/\" + 'respuestaEsperadaCaracteresEspeciales.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# --------------------------------------------------------------- #","# Uso de API REST para obtener información de las novelty-details"],"keyword":"*","line":148},{"name":"def pageInt = parseInt('1')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":149},{"name":"def sizeInt = parseInt('2')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":150},{"name":"url 'https:\/\/test-container-qa.prueba.co\/v1\/entity\/novelties\/'+noveltyUuid+''+'\/novelty-details'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":151},{"name":"header X-WorkplaceBankCode = 'TEST01'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":152},{"name":"params {page: '0', size: '100'}","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":153},{"name":"retry until responseStatus == 200 && response.content != []","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":154},{"name":"method get","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":155},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":156},{"name":"def content = response.content","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":157},{"name":"match getNoveltyDetails.content contains deep dataWithExpectedInformation","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":158}],"tags":[{"name":"@regression","line":86}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"configure retry = {count: 3, interval: 3000}","result":{"duration":242500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"result":{"duration":5170200,"error_message":"js failed:\n>>>>\n01: Java.type('co.cobre.lib.qa.aws.S3Util')\n<<<<\norg.graalvm.polyglot.PolyglotException: TypeError: Access to host class co.cobre.lib.qa.aws.S3Util is not allowed or does not exist.\n- <js>.:program(Unnamed:1)\n\nclasspath:acceptance\/test\/prueba-tecnica.feature:8","status":"failed"},"comments":["# La clase S3Util se encuentra en un gestor de librerías externo al proyecto","# Imaginemos que esta clase contiene la configuración y conexión de un cliente AWS, además los métodos para subir archivos a buckets S3","# También contiene un método para verificar si un archivo se encuentra dentro de un folder"],"line":8,"name":"def S3Manager = Java.type('co.cobre.lib.qa.aws.S3Util')","match":{"location":"karate","arguments":[]},"keyword":"*","doc_string":{"content_type":"","value":"12:06:40.186 classpath:acceptance\/test\/prueba-tecnica.feature:8\n* def S3Manager = Java.type('co.cobre.lib.qa.aws.S3Util')\njs failed:\n>>>>\n01: Java.type('co.cobre.lib.qa.aws.S3Util')\n<<<<\norg.graalvm.polyglot.PolyglotException: TypeError: Access to host class co.cobre.lib.qa.aws.S3Util is not allowed or does not exist.\n- <js>.:program(Unnamed:1)\n\nclasspath:acceptance\/test\/prueba-tecnica.feature:8\n","line":8}},{"name":"def S3ManagerInstance = new S3Manager()","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def SQSManager = karate.callSingle('..\/acceptance\/test\/instances-sqs.js')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def waitTime = function(seconds) { java.lang.Thread.sleep(seconds * 1000) }","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def FileUtils = Java.type('co.cobre.lib.qa.util.FileUtils')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# La clase FileUtils se encuentra en un gestor de librerías externo al proyecto","# Imaginemos que esta clase contiene métodos para tomar un archivo, renombrarlo y copiarlo en otra ruta"],"keyword":"*","line":14},{"name":"def CommonUtils = Java.type('co.cobre.lib.qa.util.CommonUtils')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15},{"name":"def CommonFuntion = Java.type('co.cobre.lib.qa.util.CommonFuntion')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":16}]},{"start_timestamp":"2024-03-21T17:06:40.186Z","line":174,"name":"Dado que se quiere Actualizar fecha de vencimiento por usuario","description":"","id":"dado-que-se-quiere-actualizar-fecha-de-vencimiento-por-usuario","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def File = Java.type('co.cobre.lib.qa.util.ProcessesIntheFile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"comments":["# --------------------------------------------------------------- #"],"keyword":"*","line":167},{"name":"def mensaje = File.ModifyExpirationDate('src\/test\/java\/acceptance\/test\/recaudoTemplateCaracteresEspeciales.csv','558432','2024-01-10')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":168},{"name":"def newExpirationDate = File.getExpirationDate('src\/test\/java\/acceptance\/test\/recaudoTemplateCaracteresEspeciales.csv','558432')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":169},{"name":"match newExpirationDate == '2024-01-10'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":170}],"tags":[{"name":"@regression","line":164}]}],"name":"acceptance\/test\/prueba-tecnica.feature","description":"sample karate test script","id":"sample-karate-test-script","keyword":"Feature","uri":"acceptance\/test\/prueba-tecnica.feature"}]